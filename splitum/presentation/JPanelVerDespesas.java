/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package splitum.presentation;

import java.awt.CardLayout;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Date;
import java.util.List;
import java.util.stream.Collectors;
import javax.swing.JSpinner;
import javax.swing.table.DefaultTableModel;
import splitum.business.SplitUM;
import splitum.business.despesa.Despesa;
import splitum.business.despesa.Divisao;
import splitum.business.despesa.Fixa;
import splitum.business.despesa.Percentual;
import splitum.business.despesa.PorValor;
import splitum.business.despesa.Recorrente;
import splitum.business.despesa.Variavel;
import splitum.business.estatisticas.EstatisticaPorDespesa;
import splitum.business.estatisticas.Estatisticas;

public class JPanelVerDespesas extends javax.swing.JPanel {

    private SplitUM splitUM;
    private CardLayout cl;
    private DefaultTableModel tableModelDespesas;
    private DefaultTableModel tableModelEstatisticas;
    private DefaultTableModel tableModelDetalhes;
    private JFramePrincipal mainFrame;
    private LocalDate inicioIntervalo;
    private LocalDate fimIntervalo;
    private JPanelContaCorrente panelCC;
    private List<Despesa> despesas;
    
    /**
     * Creates new form JPanelVerDespesas
     */
    public JPanelVerDespesas(JFramePrincipal mainFrame, JPanelContaCorrente panelCC, SplitUM f) {
        initComponents();
        
        this.splitUM = f;
        this.mainFrame = mainFrame;
        this.cl = (CardLayout) this.getLayout();
        this.panelCC = panelCC;
        
        this.tableModelDespesas = new DefaultTableModel() {
                @Override
                public boolean isCellEditable(int row, int column) { return false; }
            };
        this.tableModelEstatisticas = new DefaultTableModel() {
                @Override
                public boolean isCellEditable(int row, int column) { return false; }
            };
        this.tableModelDetalhes = new DefaultTableModel() {
                @Override
                public boolean isCellEditable(int row, int column) { return false; }
            };
        
        String[] colunasDespesas = {"id", "Nome", "Inserido Em", "Pago"};
        String[] colunasEstatisticas = {"Tipo", "Média", "Total Gasto"};
        String[] colunasDetalhes = {"Nome", "Quota"};
        tableModelDespesas.setColumnIdentifiers(colunasDespesas);
        tableModelEstatisticas.setColumnIdentifiers(colunasEstatisticas);
        tableModelDetalhes.setColumnIdentifiers(colunasDetalhes);
        this.jTableDespesas.setModel(tableModelDespesas);
        jTableDespesas.removeColumn(jTableDespesas.getColumnModel().getColumn(0));
        this.jTableEstatisticas.setModel(tableModelEstatisticas);
        this.jTableVDD.setModel(tableModelDetalhes);
        this.jTableDespesas.setRowHeight(25);
        this.jTableEstatisticas.setRowHeight(25);
        this.jTableVDD.setRowHeight(25);
        this.despesas = new ArrayList<>();
        
        
        JSpinner.DateEditor di = new JSpinner.DateEditor(jSpinnerDataInicio, "dd-MM-yyyy");
        jSpinnerDataInicio.setEditor(di);
        JSpinner.DateEditor df = new JSpinner.DateEditor(jSpinnerDataFim, "dd-MM-yyyy");
        jSpinnerDataFim.setEditor(df);
    }
    
    protected void init() {
        
        jLabelErro.setVisible(false);
        mainFrame.pushVoltar(panelCC, "card_cc_inicial", false);
        cl.show(this, "card_vd_inicio");
        tableModelDespesas.setRowCount(0);
        this.despesas = splitUM.getDespesas();
        List<String[]> despesasTabela = converteDespesasEmTabela();
        for(String[] row : despesasTabela) {
            tableModelDespesas.addRow(row);
        }
    }
    
      
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanelVerDetalhesDespesa = new javax.swing.JPanel();
        jLabelVDDNome = new javax.swing.JLabel();
        jLabelVDDValor = new javax.swing.JLabel();
        jLabelVDDTipo = new javax.swing.JLabel();
        jLabelVDDTipoRec = new javax.swing.JLabel();
        jLabelVDDPeriocidade = new javax.swing.JLabel();
        jLabelVDDMoradores = new javax.swing.JLabel();
        jLabelVDDNome1 = new javax.swing.JLabel();
        jLabelVDDValor1 = new javax.swing.JLabel();
        jLabelVDDTipo1 = new javax.swing.JLabel();
        jLabelVDDTipoRec1 = new javax.swing.JLabel();
        jLabelVDDPeriocidade1 = new javax.swing.JLabel();
        jScrollPaneVDD = new javax.swing.JScrollPane();
        jTableVDD = new javax.swing.JTable();
        jLabelVDDTipoEnum1 = new javax.swing.JLabel();
        jLabelVDDTipoEnum = new javax.swing.JLabel();
        jPanelVDInicio = new javax.swing.JPanel();
        jButtonVerDestalhes = new javax.swing.JButton();
        jButtonEditarDespesa = new javax.swing.JButton();
        jButtonApagarDespesa = new javax.swing.JButton();
        jButtonDespesaEstatisticas = new javax.swing.JButton();
        jScrollPane = new javax.swing.JScrollPane();
        jTableDespesas = new javax.swing.JTable();
        jLabelErro = new javax.swing.JLabel();
        jPanelEstatisticas = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableEstatisticas = new javax.swing.JTable();
        jLabelEstatisticasTitulo = new javax.swing.JLabel();
        jLabelEstatisticasIntervalo = new javax.swing.JLabel();
        jLabelEstatisticasTotal = new javax.swing.JLabel();
        jLabelEstatisticasTotalValor = new javax.swing.JLabel();
        jPanelIntervalo = new javax.swing.JPanel();
        jLabelIntervaloTitulo = new javax.swing.JLabel();
        jLabelIntervaloInicio = new javax.swing.JLabel();
        jLabelIntervaloFim = new javax.swing.JLabel();
        jButtonIntervaloOK = new javax.swing.JButton();
        jButtonIntervaloCancelar = new javax.swing.JButton();
        jSpinnerDataInicio = new javax.swing.JSpinner();
        jSpinnerDataFim = new javax.swing.JSpinner();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(800, 600));
        setLayout(new java.awt.CardLayout());

        jPanelVerDetalhesDespesa.setBackground(new java.awt.Color(255, 255, 255));
        jPanelVerDetalhesDespesa.setPreferredSize(new java.awt.Dimension(800, 600));
        jPanelVerDetalhesDespesa.setLayout(new java.awt.GridBagLayout());

        jLabelVDDNome.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        jLabelVDDNome.setText("Descrição da Despesa");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 30, 10, 10);
        jPanelVerDetalhesDespesa.add(jLabelVDDNome, gridBagConstraints);

        jLabelVDDValor.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        jLabelVDDValor.setText("Valor da Despesa");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 30, 10, 10);
        jPanelVerDetalhesDespesa.add(jLabelVDDValor, gridBagConstraints);

        jLabelVDDTipo.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        jLabelVDDTipo.setText("Tipo da Despesa");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 30, 10, 10);
        jPanelVerDetalhesDespesa.add(jLabelVDDTipo, gridBagConstraints);

        jLabelVDDTipoRec.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        jLabelVDDTipoRec.setText("Tipo da Despesa Recorrente");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 30, 10, 10);
        jPanelVerDetalhesDespesa.add(jLabelVDDTipoRec, gridBagConstraints);

        jLabelVDDPeriocidade.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        jLabelVDDPeriocidade.setText("Periocidade");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 30, 10, 10);
        jPanelVerDetalhesDespesa.add(jLabelVDDPeriocidade, gridBagConstraints);

        jLabelVDDMoradores.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        jLabelVDDMoradores.setText("Moradores");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 10);
        jPanelVerDetalhesDespesa.add(jLabelVDDMoradores, gridBagConstraints);

        jLabelVDDNome1.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jLabelVDDNome1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabelVDDNome1.setText("--");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 30);
        jPanelVerDetalhesDespesa.add(jLabelVDDNome1, gridBagConstraints);

        jLabelVDDValor1.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jLabelVDDValor1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabelVDDValor1.setText("--");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 30);
        jPanelVerDetalhesDespesa.add(jLabelVDDValor1, gridBagConstraints);

        jLabelVDDTipo1.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jLabelVDDTipo1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabelVDDTipo1.setText("--");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 30);
        jPanelVerDetalhesDespesa.add(jLabelVDDTipo1, gridBagConstraints);

        jLabelVDDTipoRec1.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jLabelVDDTipoRec1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabelVDDTipoRec1.setText("--");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 30);
        jPanelVerDetalhesDespesa.add(jLabelVDDTipoRec1, gridBagConstraints);

        jLabelVDDPeriocidade1.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jLabelVDDPeriocidade1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabelVDDPeriocidade1.setText("--");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 30);
        jPanelVerDetalhesDespesa.add(jLabelVDDPeriocidade1, gridBagConstraints);

        jScrollPaneVDD.setPreferredSize(new java.awt.Dimension(400, 200));

        jTableVDD.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jTableVDD.setFocusable(false);
        jTableVDD.setRequestFocusEnabled(false);
        jTableVDD.setShowHorizontalLines(false);
        jTableVDD.setShowVerticalLines(false);
        jScrollPaneVDD.setViewportView(jTableVDD);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 30, 30, 30);
        jPanelVerDetalhesDespesa.add(jScrollPaneVDD, gridBagConstraints);

        jLabelVDDTipoEnum1.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jLabelVDDTipoEnum1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabelVDDTipoEnum1.setText("--");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 30);
        jPanelVerDetalhesDespesa.add(jLabelVDDTipoEnum1, gridBagConstraints);

        jLabelVDDTipoEnum.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        jLabelVDDTipoEnum.setText("Categoria da Despesa");
        jLabelVDDTipoEnum.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 30, 10, 10);
        jPanelVerDetalhesDespesa.add(jLabelVDDTipoEnum, gridBagConstraints);

        add(jPanelVerDetalhesDespesa, "card_vd_detalhes");

        jPanelVDInicio.setBackground(new java.awt.Color(255, 255, 255));
        jPanelVDInicio.setPreferredSize(new java.awt.Dimension(800, 600));
        jPanelVDInicio.setLayout(new java.awt.GridBagLayout());

        jButtonVerDestalhes.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jButtonVerDestalhes.setText("Ver Detalhes Despesa");
        jButtonVerDestalhes.setMaximumSize(new java.awt.Dimension(250, 30));
        jButtonVerDestalhes.setMinimumSize(new java.awt.Dimension(250, 30));
        jButtonVerDestalhes.setPreferredSize(new java.awt.Dimension(250, 30));
        jButtonVerDestalhes.setSize(new java.awt.Dimension(250, 30));
        jButtonVerDestalhes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVerDestalhesActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 10, 20);
        jPanelVDInicio.add(jButtonVerDestalhes, gridBagConstraints);

        jButtonEditarDespesa.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jButtonEditarDespesa.setText("Editar Despesa");
        jButtonEditarDespesa.setMaximumSize(new java.awt.Dimension(250, 30));
        jButtonEditarDespesa.setMinimumSize(new java.awt.Dimension(250, 30));
        jButtonEditarDespesa.setPreferredSize(new java.awt.Dimension(250, 30));
        jButtonEditarDespesa.setSize(new java.awt.Dimension(250, 30));
        jButtonEditarDespesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditarDespesaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 10, 20);
        jPanelVDInicio.add(jButtonEditarDespesa, gridBagConstraints);

        jButtonApagarDespesa.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jButtonApagarDespesa.setText("Apagar Despesa");
        jButtonApagarDespesa.setMaximumSize(new java.awt.Dimension(250, 30));
        jButtonApagarDespesa.setMinimumSize(new java.awt.Dimension(250, 30));
        jButtonApagarDespesa.setPreferredSize(new java.awt.Dimension(250, 30));
        jButtonApagarDespesa.setSize(new java.awt.Dimension(250, 30));
        jButtonApagarDespesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonApagarDespesaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 10, 20);
        jPanelVDInicio.add(jButtonApagarDespesa, gridBagConstraints);

        jButtonDespesaEstatisticas.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jButtonDespesaEstatisticas.setText("Ver Estatísticas");
        jButtonDespesaEstatisticas.setMaximumSize(new java.awt.Dimension(250, 30));
        jButtonDespesaEstatisticas.setMinimumSize(new java.awt.Dimension(250, 30));
        jButtonDespesaEstatisticas.setPreferredSize(new java.awt.Dimension(250, 30));
        jButtonDespesaEstatisticas.setSize(new java.awt.Dimension(250, 30));
        jButtonDespesaEstatisticas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDespesaEstatisticasActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 10, 20);
        jPanelVDInicio.add(jButtonDespesaEstatisticas, gridBagConstraints);

        jScrollPane.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jScrollPane.setPreferredSize(new java.awt.Dimension(400, 400));

        jTableDespesas.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jTableDespesas.setFocusable(false);
        jTableDespesas.setRequestFocusEnabled(false);
        jTableDespesas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTableDespesas.setShowHorizontalLines(false);
        jTableDespesas.setShowVerticalLines(false);
        jScrollPane.setViewportView(jTableDespesas);
        jTableDespesas.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(20, 30, 20, 30);
        jPanelVDInicio.add(jScrollPane, gridBagConstraints);

        jLabelErro.setFont(new java.awt.Font("Lucida Grande", 3, 16)); // NOI18N
        jLabelErro.setForeground(new java.awt.Color(255, 0, 51));
        jLabelErro.setText("ERRO: nenhuma despesa selecionada.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        jPanelVDInicio.add(jLabelErro, gridBagConstraints);

        add(jPanelVDInicio, "card_vd_inicio");

        jPanelEstatisticas.setBackground(new java.awt.Color(255, 255, 255));
        jPanelEstatisticas.setPreferredSize(new java.awt.Dimension(800, 600));
        jPanelEstatisticas.setLayout(new java.awt.GridBagLayout());

        jTableEstatisticas.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jTableEstatisticas.setFocusable(false);
        jTableEstatisticas.setRequestFocusEnabled(false);
        jTableEstatisticas.setShowHorizontalLines(false);
        jTableEstatisticas.setShowVerticalLines(false);
        jScrollPane1.setViewportView(jTableEstatisticas);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.ipady = 100;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 30, 0, 30);
        jPanelEstatisticas.add(jScrollPane1, gridBagConstraints);

        jLabelEstatisticasTitulo.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        jLabelEstatisticasTitulo.setText("Estatísticas das Despesas");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(30, 30, 10, 30);
        jPanelEstatisticas.add(jLabelEstatisticasTitulo, gridBagConstraints);

        jLabelEstatisticasIntervalo.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jLabelEstatisticasIntervalo.setText("De -- a --");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(30, 30, 10, 30);
        jPanelEstatisticas.add(jLabelEstatisticasIntervalo, gridBagConstraints);

        jLabelEstatisticasTotal.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jLabelEstatisticasTotal.setText("Total gasto nas despesas neste intervalo: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(10, 30, 30, 30);
        jPanelEstatisticas.add(jLabelEstatisticasTotal, gridBagConstraints);

        jLabelEstatisticasTotalValor.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jLabelEstatisticasTotalValor.setText("20 €");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 30, 30, 30);
        jPanelEstatisticas.add(jLabelEstatisticasTotalValor, gridBagConstraints);

        add(jPanelEstatisticas, "card_vd_estatisticas");

        jPanelIntervalo.setBackground(new java.awt.Color(255, 255, 255));
        jPanelIntervalo.setLayout(new java.awt.GridBagLayout());

        jLabelIntervaloTitulo.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jLabelIntervaloTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelIntervaloTitulo.setText("Insira o intervalo de tempo:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 200;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        jPanelIntervalo.add(jLabelIntervaloTitulo, gridBagConstraints);

        jLabelIntervaloInicio.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jLabelIntervaloInicio.setText("Início");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        jPanelIntervalo.add(jLabelIntervaloInicio, gridBagConstraints);

        jLabelIntervaloFim.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jLabelIntervaloFim.setText("Fim");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        jPanelIntervalo.add(jLabelIntervaloFim, gridBagConstraints);

        jButtonIntervaloOK.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jButtonIntervaloOK.setText("OK");
        jButtonIntervaloOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIntervaloOKActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.ipadx = 40;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        jPanelIntervalo.add(jButtonIntervaloOK, gridBagConstraints);

        jButtonIntervaloCancelar.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jButtonIntervaloCancelar.setText("Cancelar");
        jButtonIntervaloCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIntervaloCancelarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.ipadx = 40;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        jPanelIntervalo.add(jButtonIntervaloCancelar, gridBagConstraints);

        jSpinnerDataInicio.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jSpinnerDataInicio.setModel(new javax.swing.SpinnerDateModel());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        jPanelIntervalo.add(jSpinnerDataInicio, gridBagConstraints);

        jSpinnerDataFim.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jSpinnerDataFim.setModel(new javax.swing.SpinnerDateModel());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        jPanelIntervalo.add(jSpinnerDataFim, gridBagConstraints);

        add(jPanelIntervalo, "card_vd_intervalo");
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonApagarDespesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonApagarDespesaActionPerformed
        int i = jTableDespesas.getSelectedRow();
        if(i >= 0) {
            //System.out.println(tableModelDespesas.getValueAt(jTableDespesas.getSelectedRow(),1));
            String id = tableModelDespesas.getValueAt(i,0).toString();
            splitUM.inativaDespesa(id);
            tableModelDespesas.removeRow(i);
            jLabelErro.setVisible(false);
        }
        else {
            jLabelErro.setVisible(true);
        }
    }//GEN-LAST:event_jButtonApagarDespesaActionPerformed

    private void jButtonDespesaEstatisticasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDespesaEstatisticasActionPerformed
        mainFrame.pushVoltar(this, "card_vd_inicio", true);
        cl.show(this, "card_vd_intervalo");
        
        jLabelErro.setVisible(false);
    }//GEN-LAST:event_jButtonDespesaEstatisticasActionPerformed

    private void jButtonIntervaloCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIntervaloCancelarActionPerformed
        mainFrame.popVoltar();
        jLabelErro.setVisible(false);
    }//GEN-LAST:event_jButtonIntervaloCancelarActionPerformed

    private void jButtonIntervaloOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIntervaloOKActionPerformed
        inicioIntervalo = ((Date) jSpinnerDataInicio.getValue()).toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        fimIntervalo = ((Date) jSpinnerDataFim.getValue()).toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        
        if (inicioIntervalo.isAfter(fimIntervalo)) {
            LocalDate temporario = inicioIntervalo;
            inicioIntervalo = fimIntervalo;
            fimIntervalo = temporario;
        }
        
        tableModelEstatisticas.setRowCount(0);
        Estatisticas estatisticas = splitUM.getEstatisticasMorador(inicioIntervalo, fimIntervalo);
        List<String[]> estatisticasTabela = converteEstatisticasEmTabela(estatisticas.getEstatisticasPorDespesa());
        
        for(String[] row : estatisticasTabela) {
            tableModelEstatisticas.addRow(row);
        }
        
        DateTimeFormatter formatter = DateTimeFormatter.ISO_LOCAL_DATE;
        jLabelEstatisticasIntervalo.setText("De " + inicioIntervalo.format(formatter) + " a " + fimIntervalo.format(formatter));
        float total = estatisticas.getTotalDespesas();
        jLabelEstatisticasTotalValor.setText(total + " € ");
        
        
        mainFrame.pushVoltar(this, "card_vd_intervalo", true);
        cl.show(this, "card_vd_estatisticas");
        
        jLabelErro.setVisible(false);
    }//GEN-LAST:event_jButtonIntervaloOKActionPerformed

    private void jButtonVerDestalhesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVerDestalhesActionPerformed
        int i = jTableDespesas.getSelectedRow();
        if(i >= 0) {
            Despesa despesa = getDetalhesDespesa(i);
            String[] detalhes = converteDespesaEmDetalhes(despesa);
            jLabelVDDNome1.setText(detalhes[0]);
            jLabelVDDTipoEnum1.setText(detalhes[3]);
            jLabelVDDValor1.setText(detalhes[1]);
            jLabelVDDTipo1.setText(detalhes[2]);
            jLabelVDDTipoRec1.setText(detalhes[5]);
            jLabelVDDPeriocidade1.setText(detalhes[4]);
            
            tableModelDetalhes.setRowCount(0);
            List<String[]> moradores = converteDivisoesEmTabela(despesa.getDivisoes());
            
            for(String[] morador : moradores) {
                tableModelDetalhes.addRow(morador);
            }

            mainFrame.pushVoltar(this, "card_vd_inicio", true);
            cl.show(this, "card_vd_detalhes");
            jLabelErro.setVisible(false);
        }
        else {
            jLabelErro.setVisible(true);
        }
        
    }//GEN-LAST:event_jButtonVerDestalhesActionPerformed

    private void jButtonEditarDespesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditarDespesaActionPerformed
        int i = jTableDespesas.getSelectedRow();
        if(i >= 0) {
            panelCC.getjPanelAdicionarDespesa().setDepesaParaEditar(getIdDespesa(i), isDespesaRecorrente(i), isDespesaFixa(i));
            
            mainFrame.clearVoltar();
            panelCC.getjPanelAdicionarDespesa().init();
            CardLayout c = (CardLayout) panelCC.getLayout();
            c.show(panelCC, "card_adiciona_despesa");
            
            
            jLabelErro.setVisible(false);
        }
        else {
            jLabelErro.setVisible(true);
        }
    }//GEN-LAST:event_jButtonEditarDespesaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonApagarDespesa;
    private javax.swing.JButton jButtonDespesaEstatisticas;
    private javax.swing.JButton jButtonEditarDespesa;
    private javax.swing.JButton jButtonIntervaloCancelar;
    private javax.swing.JButton jButtonIntervaloOK;
    private javax.swing.JButton jButtonVerDestalhes;
    private javax.swing.JLabel jLabelErro;
    private javax.swing.JLabel jLabelEstatisticasIntervalo;
    private javax.swing.JLabel jLabelEstatisticasTitulo;
    private javax.swing.JLabel jLabelEstatisticasTotal;
    private javax.swing.JLabel jLabelEstatisticasTotalValor;
    private javax.swing.JLabel jLabelIntervaloFim;
    private javax.swing.JLabel jLabelIntervaloInicio;
    private javax.swing.JLabel jLabelIntervaloTitulo;
    private javax.swing.JLabel jLabelVDDMoradores;
    private javax.swing.JLabel jLabelVDDNome;
    private javax.swing.JLabel jLabelVDDNome1;
    private javax.swing.JLabel jLabelVDDPeriocidade;
    private javax.swing.JLabel jLabelVDDPeriocidade1;
    private javax.swing.JLabel jLabelVDDTipo;
    private javax.swing.JLabel jLabelVDDTipo1;
    private javax.swing.JLabel jLabelVDDTipoEnum;
    private javax.swing.JLabel jLabelVDDTipoEnum1;
    private javax.swing.JLabel jLabelVDDTipoRec;
    private javax.swing.JLabel jLabelVDDTipoRec1;
    private javax.swing.JLabel jLabelVDDValor;
    private javax.swing.JLabel jLabelVDDValor1;
    private javax.swing.JPanel jPanelEstatisticas;
    private javax.swing.JPanel jPanelIntervalo;
    private javax.swing.JPanel jPanelVDInicio;
    private javax.swing.JPanel jPanelVerDetalhesDespesa;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPaneVDD;
    private javax.swing.JSpinner jSpinnerDataFim;
    private javax.swing.JSpinner jSpinnerDataInicio;
    private javax.swing.JTable jTableDespesas;
    private javax.swing.JTable jTableEstatisticas;
    private javax.swing.JTable jTableVDD;
    // End of variables declaration//GEN-END:variables

    private List<String[]> converteDespesasEmTabela() {
        despesas = splitUM.getDespesas();
        
        return despesas.stream().map(d -> {
            String[] linha = new String[4];
            linha[0] = d.getId();
            linha[1] = d.getDescricao();
            linha[2] = d.getUltimaFatura().getData().toString();
            linha[3] = d.getUltimaFatura().estaPaga() ? "\u2713" : "x";
            return linha;
        }).collect(Collectors.toList());
    }
    
    private List<String[]> converteEstatisticasEmTabela(Collection<EstatisticaPorDespesa> estatisticas) {
        return estatisticas.stream().map(e -> {
            String[] linha = new String[3];
            linha[0] = e.getNome();
            linha[1] = "" + e.getMedia();
            linha[2] = "" + e.getTotal();
            return linha;
        }).collect(Collectors.toList());
    }
    
    private List<String[]> converteDivisoesEmTabela(List<Divisao> divisoes) {
        boolean percentual = divisoes.stream().anyMatch(d -> d instanceof Percentual);
        
        return divisoes.stream().map(d -> {
            String[] linha = new String[2];
            linha[0] = d.getUsername();
            
            if (percentual) {
                linha[1] = ((Percentual) d).getPercentagem()*100 + "%";
            }
            else {
                linha[1] = ((PorValor) d).getValor() + "€";
            }
            return linha;
        }).collect(Collectors.toList());
    }
       
    private boolean isDespesaRecorrente(int posicaoDespesa) {
        Despesa despesa = despesas.get(posicaoDespesa);
        
        return despesa instanceof Recorrente;
    }
    
    private boolean isDespesaFixa(int posicaoDespesa) {
        Despesa despesa = despesas.get(posicaoDespesa);
        
        return isDespesaRecorrente(posicaoDespesa) && despesa instanceof Fixa;
    }
    
    private String getIdDespesa(int posicaoDespesa) {
        Despesa despesa = despesas.get(posicaoDespesa);
        
        return despesa.getId();
    }
    
    private Despesa getDetalhesDespesa(int posicaoDespesa) {
        Despesa despesa = despesas.get(posicaoDespesa);
        Despesa result;
        
        if (isDespesaRecorrente(posicaoDespesa)) {
            if (isDespesaFixa(posicaoDespesa)) {
                result = splitUM.getDespesaRecorrenteFixa(despesa.getId());
            }
            else {
                result = splitUM.getDespesaRecorrenteVariavel(despesa.getId());
            }
        }
        else {
            result = splitUM.getDespesaExtraordinaria(despesa.getId());
        }

        return result;
    }
    
    private String[] converteDespesaEmDetalhes(Despesa despesa) {
        String[] detalhes = new String[6];
        
        if (despesa instanceof Recorrente) {
            if (despesa instanceof Fixa) {
                detalhes[3] = ((Fixa) despesa).getTipo().toString();
                detalhes[5] = "Fixa";
            }
            else {
                detalhes[3] = ((Variavel) despesa).getTipo().toString();
                detalhes[5] = "Variável";
            }
            
            detalhes[2] = "Recorrente";
            detalhes[4] = ((Recorrente) despesa).getPeriodicidade().toString();
        }
        else {
            detalhes[2] = "Extraordinaria";
            detalhes[3] = "n/a";
            detalhes[4] = "n/a";
        }
        
        detalhes[0] = despesa.getDescricao();
        detalhes[1] = "" + despesa.getValor();
        
        return detalhes;
    }
}
