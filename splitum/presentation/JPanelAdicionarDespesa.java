/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package splitum.presentation;

import java.awt.CardLayout;
import java.awt.Color;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;
import javax.swing.AbstractButton;
import javax.swing.ButtonGroup;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JTable;
import javax.swing.JToggleButton;
import javax.swing.table.DefaultTableModel;
import splitum.business.SplitUM;
import splitum.business.apartamento.Morador;
import splitum.business.despesa.Despesa;
import splitum.business.despesa.Divisao;
import splitum.business.despesa.Fixa;
import splitum.business.despesa.Percentual;
import splitum.business.despesa.Periodicidade;
import splitum.business.despesa.PorValor;
import splitum.business.despesa.Recorrente;
import splitum.business.despesa.TipoDespesaFixa;
import splitum.business.despesa.TipoDespesaVariavel;
import splitum.business.despesa.Variavel;

public class JPanelAdicionarDespesa extends javax.swing.JPanel {

    private SplitUM splitUM;
    private CardLayout cl;
    private JFramePrincipal mainFrame;
    private JPanelContaCorrente panelCC;
    private DefaultTableModel tableModelDivisao;
    private DefaultComboBoxModel comboBoxModelPerio;
    private DefaultComboBoxModel comboBoxModelTipoFixa;
    private DefaultComboBoxModel comboBoxModelTipoVar;
    
    
    // todos os campos da despesa
    private Boolean novaDespesa;
    private String idD = null; //nova despesa não tem ID, mas o editar despesa tem
    private String nomeD;
    private Float valorD;
    private String tipoD; // extra ou recorrent
    private String tipoDivisaoD;
    private Map<String, Float> moradoresD;
    private String periodicidadeD;
    private String tipoEnumD;
    private Boolean ausenciaD;
    private Boolean fixaD;

    /**
     * Creates new form JPanelAdicionarDespesa
     */
    public JPanelAdicionarDespesa(JFramePrincipal mainFrame, JPanelContaCorrente panelCC, SplitUM f) {
        initComponents();
        
        this.splitUM = f;
        this.mainFrame = mainFrame;
        this.cl = (CardLayout) this.getLayout();
        this.panelCC = panelCC;
        
        
        this.tableModelDivisao = new DefaultTableModel() {
                @Override
                public boolean isCellEditable(int row, int column) { 
                    return column == 1 ? false : true; 
                }

                @Override
                  public Class getColumnClass(int col) {
                    if (col == 0) {
                        return Boolean.class;
                    }
                    else {
                        return String.class;
                    }
                }
            };
        
        String[] colunas = {" ", "Nome", "Valor"};
        tableModelDivisao.setColumnIdentifiers(colunas);
        this.jTableDivisao.setModel(tableModelDivisao);
        this.jTableDivisao.setRowHeight(35);
        //jTableDivisao.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        jTableDivisao.getColumnModel().getColumn(0).setMaxWidth(20);
        jTableDivisao.getColumnModel().getColumn(0).setWidth(20);
    }
    
    void init() {
        jLabelErroValor.setForeground(Color.WHITE);
        jLabelErroValorDivisao.setForeground(Color.WHITE);
        if(idD == null) {
            novaDespesa = true;
            moradoresD = new HashMap<>();
            jTextFieldNomeDespesa.setText("");
            jTextFieldValorDespesa.setText("");

        }
        else {
            novaDespesa = false;
            jTextFieldNomeDespesa.setText(nomeD);
            jTextFieldValorDespesa.setText(valorD.toString());
            if(isPercentual()) jRadioButtonDivisaoPercentual.setSelected(true);
            else jRadioButtonDivisaoPorValor.setSelected(true);
            if(isRecorrente()) jRadioButtonRecorrente.setSelected(true);
            else jRadioButtonExtraordinaria.setSelected(true);
            
        }
        mainFrame.pushVoltar(panelCC, "card_cc_inicial", false);
        mainFrame.esconderVoltar();
        cl.show(this, "card_ad_inicial");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroupTipo = new javax.swing.ButtonGroup();
        buttonGroupDivisao = new javax.swing.ButtonGroup();
        buttonGroupRecorrente = new javax.swing.ButtonGroup();
        jPanelAdicionarDespesa = new javax.swing.JPanel();
        jLabelNomeDespesa = new javax.swing.JLabel();
        jLabelValorDespesa = new javax.swing.JLabel();
        jLabelTipoDespesa = new javax.swing.JLabel();
        jRadioButtonRecorrente = new javax.swing.JRadioButton();
        jRadioButtonExtraordinaria = new javax.swing.JRadioButton();
        jButtonContinuar1 = new javax.swing.JButton();
        jButtonCancelar1 = new javax.swing.JButton();
        jTextFieldNomeDespesa = new javax.swing.JTextField();
        jTextFieldValorDespesa = new javax.swing.JTextField();
        jLabelDivisaoDespesa = new javax.swing.JLabel();
        jRadioButtonDivisaoPercentual = new javax.swing.JRadioButton();
        jRadioButtonDivisaoPorValor = new javax.swing.JRadioButton();
        jLabelErroValor = new javax.swing.JLabel();
        jPanelAdicionarDespesaRecorrente = new javax.swing.JPanel();
        jLabelTipoDespesaRecorrente = new javax.swing.JLabel();
        jLabelPeriodicidade = new javax.swing.JLabel();
        jLabelAusencia = new javax.swing.JLabel();
        jRadioButtonFixa = new javax.swing.JRadioButton();
        jRadioButtonVariavel = new javax.swing.JRadioButton();
        jCheckBoxAusencia = new javax.swing.JCheckBox();
        jButtonGuardar = new javax.swing.JButton();
        jButtonCancelar3 = new javax.swing.JButton();
        jComboBoxPeriocidade = new javax.swing.JComboBox<>();
        jLabelTipoEnum = new javax.swing.JLabel();
        jComboBoxTipoEnum = new javax.swing.JComboBox<>();
        jPanelDivisaoMoradores = new javax.swing.JPanel();
        jButtonContinuar2 = new javax.swing.JButton();
        jButtonCancelar2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableDivisao = new javax.swing.JTable();
        jLabelErroValorDivisao = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        setLayout(new java.awt.CardLayout());

        jPanelAdicionarDespesa.setBackground(new java.awt.Color(255, 255, 255));
        jPanelAdicionarDespesa.setPreferredSize(new java.awt.Dimension(800, 600));
        jPanelAdicionarDespesa.setLayout(new java.awt.GridBagLayout());

        jLabelNomeDespesa.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jLabelNomeDespesa.setText("Descrição da despesa");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 20);
        jPanelAdicionarDespesa.add(jLabelNomeDespesa, gridBagConstraints);

        jLabelValorDespesa.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jLabelValorDespesa.setText("Valor da despesa");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        jPanelAdicionarDespesa.add(jLabelValorDespesa, gridBagConstraints);

        jLabelTipoDespesa.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jLabelTipoDespesa.setText("Tipo da despesa ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        jPanelAdicionarDespesa.add(jLabelTipoDespesa, gridBagConstraints);

        jRadioButtonRecorrente.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroupTipo.add(jRadioButtonRecorrente);
        jRadioButtonRecorrente.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jRadioButtonRecorrente.setSelected(true);
        jRadioButtonRecorrente.setText("Recorrente");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 5, 20);
        jPanelAdicionarDespesa.add(jRadioButtonRecorrente, gridBagConstraints);

        jRadioButtonExtraordinaria.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroupTipo.add(jRadioButtonExtraordinaria);
        jRadioButtonExtraordinaria.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jRadioButtonExtraordinaria.setText("Extraordinária");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 20, 20, 20);
        jPanelAdicionarDespesa.add(jRadioButtonExtraordinaria, gridBagConstraints);

        jButtonContinuar1.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jButtonContinuar1.setText("Continuar");
        jButtonContinuar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonContinuar1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        jPanelAdicionarDespesa.add(jButtonContinuar1, gridBagConstraints);

        jButtonCancelar1.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jButtonCancelar1.setText("Cancelar");
        jButtonCancelar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelar1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        jPanelAdicionarDespesa.add(jButtonCancelar1, gridBagConstraints);

        jTextFieldNomeDespesa.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 300;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 20, 20);
        jPanelAdicionarDespesa.add(jTextFieldNomeDespesa, gridBagConstraints);

        jTextFieldValorDespesa.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 200;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        jPanelAdicionarDespesa.add(jTextFieldValorDespesa, gridBagConstraints);

        jLabelDivisaoDespesa.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jLabelDivisaoDespesa.setText("Divisão da Despesa");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 20);
        jPanelAdicionarDespesa.add(jLabelDivisaoDespesa, gridBagConstraints);

        jRadioButtonDivisaoPercentual.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroupDivisao.add(jRadioButtonDivisaoPercentual);
        jRadioButtonDivisaoPercentual.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jRadioButtonDivisaoPercentual.setText("Percentual");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 20, 20, 20);
        jPanelAdicionarDespesa.add(jRadioButtonDivisaoPercentual, gridBagConstraints);

        jRadioButtonDivisaoPorValor.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroupDivisao.add(jRadioButtonDivisaoPorValor);
        jRadioButtonDivisaoPorValor.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jRadioButtonDivisaoPorValor.setSelected(true);
        jRadioButtonDivisaoPorValor.setText("Por Valor");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 5, 20);
        jPanelAdicionarDespesa.add(jRadioButtonDivisaoPorValor, gridBagConstraints);

        jLabelErroValor.setFont(new java.awt.Font("Lucida Grande", 3, 16)); // NOI18N
        jLabelErroValor.setForeground(new java.awt.Color(255, 0, 0));
        jLabelErroValor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelErroValor.setText("ERRO: insira um número como valor da despesa.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanelAdicionarDespesa.add(jLabelErroValor, gridBagConstraints);

        add(jPanelAdicionarDespesa, "card_ad_inicial");

        jPanelAdicionarDespesaRecorrente.setBackground(new java.awt.Color(255, 255, 255));
        jPanelAdicionarDespesaRecorrente.setPreferredSize(new java.awt.Dimension(800, 600));
        jPanelAdicionarDespesaRecorrente.setLayout(new java.awt.GridBagLayout());

        jLabelTipoDespesaRecorrente.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jLabelTipoDespesaRecorrente.setText("Tipo da despesa Recorrente");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(30, 10, 10, 10);
        jPanelAdicionarDespesaRecorrente.add(jLabelTipoDespesaRecorrente, gridBagConstraints);

        jLabelPeriodicidade.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jLabelPeriodicidade.setText("Periodicidade");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanelAdicionarDespesaRecorrente.add(jLabelPeriodicidade, gridBagConstraints);

        jLabelAusencia.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jLabelAusencia.setText("Ausência");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanelAdicionarDespesaRecorrente.add(jLabelAusencia, gridBagConstraints);

        buttonGroupRecorrente.add(jRadioButtonFixa);
        jRadioButtonFixa.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jRadioButtonFixa.setSelected(true);
        jRadioButtonFixa.setText("Fixa");
        jRadioButtonFixa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonFixaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 50;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(30, 10, 5, 10);
        jPanelAdicionarDespesaRecorrente.add(jRadioButtonFixa, gridBagConstraints);

        buttonGroupRecorrente.add(jRadioButtonVariavel);
        jRadioButtonVariavel.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jRadioButtonVariavel.setText("Variável");
        jRadioButtonVariavel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonVariavelActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 50;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 10, 10);
        jPanelAdicionarDespesaRecorrente.add(jRadioButtonVariavel, gridBagConstraints);

        jCheckBoxAusencia.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jCheckBoxAusencia.setText("Permitir");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanelAdicionarDespesaRecorrente.add(jCheckBoxAusencia, gridBagConstraints);

        jButtonGuardar.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jButtonGuardar.setText("Guardar");
        jButtonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(30, 10, 10, 10);
        jPanelAdicionarDespesaRecorrente.add(jButtonGuardar, gridBagConstraints);

        jButtonCancelar3.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jButtonCancelar3.setText("Cancelar");
        jButtonCancelar3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelar3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(30, 10, 10, 10);
        jPanelAdicionarDespesaRecorrente.add(jButtonCancelar3, gridBagConstraints);

        jComboBoxPeriocidade.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanelAdicionarDespesaRecorrente.add(jComboBoxPeriocidade, gridBagConstraints);

        jLabelTipoEnum.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jLabelTipoEnum.setText("Tipo da Despesa");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanelAdicionarDespesaRecorrente.add(jLabelTipoEnum, gridBagConstraints);

        jComboBoxTipoEnum.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanelAdicionarDespesaRecorrente.add(jComboBoxTipoEnum, gridBagConstraints);

        add(jPanelAdicionarDespesaRecorrente, "card_ad_recorrente");

        jPanelDivisaoMoradores.setBackground(new java.awt.Color(255, 255, 255));
        jPanelDivisaoMoradores.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jPanelDivisaoMoradores.setPreferredSize(new java.awt.Dimension(800, 600));
        jPanelDivisaoMoradores.setLayout(new java.awt.GridBagLayout());

        jButtonContinuar2.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jButtonContinuar2.setText("Continuar");
        jButtonContinuar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonContinuar2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 40, 20, 20);
        jPanelDivisaoMoradores.add(jButtonContinuar2, gridBagConstraints);

        jButtonCancelar2.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jButtonCancelar2.setText("Cancelar");
        jButtonCancelar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelar2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 20, 40);
        jPanelDivisaoMoradores.add(jButtonCancelar2, gridBagConstraints);

        jScrollPane1.setMinimumSize(new java.awt.Dimension(100, 100));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(400, 400));
        jScrollPane1.setSize(new java.awt.Dimension(400, 400));

        jTableDivisao.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jTableDivisao.setPreferredSize(new java.awt.Dimension(200, 200));
        jScrollPane1.setViewportView(jTableDivisao);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(30, 40, 10, 40);
        jPanelDivisaoMoradores.add(jScrollPane1, gridBagConstraints);

        jLabelErroValorDivisao.setFont(new java.awt.Font("Lucida Grande", 3, 16)); // NOI18N
        jLabelErroValorDivisao.setForeground(new java.awt.Color(255, 0, 0));
        jLabelErroValorDivisao.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelErroValorDivisao.setText("ERRO: insira um número como divisão.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanelDivisaoMoradores.add(jLabelErroValorDivisao, gridBagConstraints);

        add(jPanelDivisaoMoradores, "card_ad_divisao");
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonContinuar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonContinuar1ActionPerformed
        nomeD = jTextFieldNomeDespesa.getText().trim();
        if(!nomeD.equals("")) {
            try {
                valorD = Float.parseFloat(jTextFieldValorDespesa.getText());
                nomeD = jTextFieldNomeDespesa.getText();
                tipoD = getSelectedButtonText(buttonGroupTipo);
                tipoDivisaoD = getSelectedButtonText(buttonGroupDivisao);

                float valorTotal;
                
                //List<String> moradores = splitUM.getMoradores().stream().map(m -> m.getUsername()).collect(Collectors.toList());
                List<String> moradores = new ArrayList<>();
                splitUM.getMoradores().stream().forEach((m) -> {
                    moradores.add(m.getUsername());
                });


                if(tipoDivisaoD.equals("Percentual")) {
                     jTableDivisao.getColumnModel().getColumn(2).setHeaderValue("Percentagem (%)");
                     valorTotal = 1.0f / moradores.size() * 100;
                } else {
                     jTableDivisao.getColumnModel().getColumn(2).setHeaderValue("Valor (€)");
                     valorTotal = valorD / moradores.size();
                }
                
                jTableDivisao.getTableHeader().repaint();
                tableModelDivisao.setRowCount(0);
                
                for(String m : moradores) {
                    Object[] row = new Object[3];
                    if(moradoresD.containsKey(m)) {
                        row[0] = true;
                        row[1] = m;
                        row[2] = moradoresD.get(m).toString();
                    }
                    else {
                        row[0] = true;
                        row[1] = m;
                        row[2] = "" + valorTotal;
                    }
                    tableModelDivisao.addRow(row);
                }

                mainFrame.pushVoltar(this, "card_ad_inicial", false);
                cl.show(this, "card_ad_divisao");
                jLabelErroValor.setForeground(Color.WHITE);
            }
            catch(NumberFormatException nfe) {
                jLabelErroValor.setText("ERRO: insira um número como valor da despesa.");
                jLabelErroValor.setForeground(Color.RED);
            }
        }
        else {
            jLabelErroValor.setText("ERRO: dê um nome à despesa.");
            jLabelErroValor.setForeground(Color.RED);
        }
        
    }//GEN-LAST:event_jButtonContinuar1ActionPerformed

    private void jButtonCancelar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelar1ActionPerformed
        mainFrame.clearVoltar();
        panelCC.init();
    }//GEN-LAST:event_jButtonCancelar1ActionPerformed

    private void jButtonContinuar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonContinuar2ActionPerformed
        moradoresD.clear();
        int nLinhas = tableModelDivisao.getRowCount();
        boolean erros = false;
        float total = 0;
        for(int i=0 ; i<nLinhas && !erros; i++) {
            if((boolean)tableModelDivisao.getValueAt(i, 0)) {
                try {
                    String m = tableModelDivisao.getValueAt(i, 1).toString();
                    Float v = Float.parseFloat(tableModelDivisao.getValueAt(i, 2).toString());
                    moradoresD.put(m, v);
                    total = total + v;
                }
                catch(NumberFormatException nfe) {
                    jLabelErroValorDivisao.setText("ERRO: insira um número como divisão.");
                    jLabelErroValorDivisao.setForeground(Color.RED);
                    erros = true;
                }
            }
        }
        
        if(!erros && isPercentual() && total != 100) {
                jLabelErroValorDivisao.setText("ERRO: a percentagem total tem que ser 100%.");
                jLabelErroValorDivisao.setForeground(Color.RED);
        }
        else if(!erros && !isPercentual() && total != valorD) {
                jLabelErroValorDivisao.setText("ERRO: a soma das parcelas deve ser igual a "+valorD+" €.");
                jLabelErroValorDivisao.setForeground(Color.RED);
        }
        else if(!erros) {
            if(isRecorrente()) {
                String[] periodicidades = Periodicidade.getArrayString();
                
                comboBoxModelPerio = new DefaultComboBoxModel(periodicidades);
                jComboBoxPeriocidade.setModel(comboBoxModelPerio);
                comboBoxModelTipoFixa = new DefaultComboBoxModel(TipoDespesaFixa.getArrayString());
                comboBoxModelTipoVar = new DefaultComboBoxModel(TipoDespesaVariavel.getArrayString());
                if(idD == null) {
                    jComboBoxPeriocidade.setSelectedIndex(0);
                    jRadioButtonFixa.setSelected(true);
                    jCheckBoxAusencia.setSelected(false);
                    jComboBoxTipoEnum.setModel(comboBoxModelTipoFixa);
                    jComboBoxTipoEnum.setSelectedIndex(0);
                }
                else {
                    jComboBoxPeriocidade.setSelectedItem(periodicidadeD);
                    if(isFixa()) {
                        jRadioButtonFixa.setSelected(true);
                        jComboBoxTipoEnum.setModel(comboBoxModelTipoFixa);
                    }
                    else {
                        jRadioButtonVariavel.setSelected(true);
                        jComboBoxTipoEnum.setModel(comboBoxModelTipoVar);
                    }
                    jComboBoxTipoEnum.setSelectedItem(tipoEnumD);
                    jCheckBoxAusencia.setSelected(ausenciaD);
                }
                mainFrame.pushVoltar(this, "card_ad_divisao", true);
                cl.show(this, "card_ad_recorrente");
            }
            else {
                if(novaDespesa) {
                    splitUM.adicionaDespesaExtraordinaria(nomeD, valorD, getDivisoes());
                } else {
                    splitUM.alteraDespesaExtraordinaria(idD, nomeD, valorD, getDivisoes());
                }
                mainFrame.clearVoltar();
                panelCC.init();
            }
        }
    }//GEN-LAST:event_jButtonContinuar2ActionPerformed

    private void jButtonCancelar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelar2ActionPerformed
        mainFrame.clearVoltar();
        panelCC.init();
    }//GEN-LAST:event_jButtonCancelar2ActionPerformed

    private void jButtonCancelar3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelar3ActionPerformed
        mainFrame.clearVoltar();
        panelCC.init();
    }//GEN-LAST:event_jButtonCancelar3ActionPerformed

    private void jButtonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarActionPerformed
        periodicidadeD = jComboBoxPeriocidade.getSelectedItem().toString();
        tipoEnumD = jComboBoxTipoEnum.getSelectedItem().toString();
        ausenciaD = jCheckBoxAusencia.isSelected();
        fixaD = jRadioButtonFixa.isSelected();
        Periodicidade p = Periodicidade.valueOf(periodicidadeD);
        
        if (!fixaD) {
            TipoDespesaVariavel tipo = TipoDespesaVariavel.valueOf(tipoEnumD);
            if(novaDespesa) {
                splitUM.adicionaDespesaRecorrenteVariavel(tipo, nomeD, valorD, getDivisoes(), p, ausenciaD);
            } else {
                splitUM.alteraDespesaRecorrenteVariavel(idD, tipo, nomeD, valorD, getDivisoes(), p, ausenciaD);
            }
        }
        else {
            TipoDespesaFixa tipo = TipoDespesaFixa.valueOf(tipoEnumD);
            if(novaDespesa) {
                splitUM.adicionaDespesaRecorrenteFixa(tipo, nomeD, valorD, getDivisoes(), p, ausenciaD);
            } else {
                splitUM.alteraDespesaRecorrenteFixa(idD, tipo, nomeD, valorD, getDivisoes(), p, ausenciaD);
            }
        }
        
        mainFrame.clearVoltar();
        panelCC.init();
    }//GEN-LAST:event_jButtonGuardarActionPerformed

    private void jRadioButtonVariavelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonVariavelActionPerformed
        jComboBoxTipoEnum.setModel(comboBoxModelTipoVar);
    }//GEN-LAST:event_jRadioButtonVariavelActionPerformed

    private void jRadioButtonFixaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonFixaActionPerformed
        jComboBoxTipoEnum.setModel(comboBoxModelTipoFixa);
    }//GEN-LAST:event_jRadioButtonFixaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupDivisao;
    private javax.swing.ButtonGroup buttonGroupRecorrente;
    private javax.swing.ButtonGroup buttonGroupTipo;
    private javax.swing.JButton jButtonCancelar1;
    private javax.swing.JButton jButtonCancelar2;
    private javax.swing.JButton jButtonCancelar3;
    private javax.swing.JButton jButtonContinuar1;
    private javax.swing.JButton jButtonContinuar2;
    private javax.swing.JButton jButtonGuardar;
    private javax.swing.JCheckBox jCheckBoxAusencia;
    private javax.swing.JComboBox<String> jComboBoxPeriocidade;
    private javax.swing.JComboBox<String> jComboBoxTipoEnum;
    private javax.swing.JLabel jLabelAusencia;
    private javax.swing.JLabel jLabelDivisaoDespesa;
    private javax.swing.JLabel jLabelErroValor;
    private javax.swing.JLabel jLabelErroValorDivisao;
    private javax.swing.JLabel jLabelNomeDespesa;
    private javax.swing.JLabel jLabelPeriodicidade;
    private javax.swing.JLabel jLabelTipoDespesa;
    private javax.swing.JLabel jLabelTipoDespesaRecorrente;
    private javax.swing.JLabel jLabelTipoEnum;
    private javax.swing.JLabel jLabelValorDespesa;
    private javax.swing.JPanel jPanelAdicionarDespesa;
    private javax.swing.JPanel jPanelAdicionarDespesaRecorrente;
    private javax.swing.JPanel jPanelDivisaoMoradores;
    private javax.swing.JRadioButton jRadioButtonDivisaoPercentual;
    private javax.swing.JRadioButton jRadioButtonDivisaoPorValor;
    private javax.swing.JRadioButton jRadioButtonExtraordinaria;
    private javax.swing.JRadioButton jRadioButtonFixa;
    private javax.swing.JRadioButton jRadioButtonRecorrente;
    private javax.swing.JRadioButton jRadioButtonVariavel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableDivisao;
    private javax.swing.JTextField jTextFieldNomeDespesa;
    private javax.swing.JTextField jTextFieldValorDespesa;
    // End of variables declaration//GEN-END:variables

public String getSelectedButtonText(ButtonGroup buttonGroup) {
        for (Enumeration<AbstractButton> buttons = buttonGroup.getElements(); buttons.hasMoreElements();) {
            AbstractButton button = buttons.nextElement();
            if (button.isSelected()) {
                return button.getText();
            }
        }
        return null;
    }

    private boolean isFixa() {
        return fixaD;
    }
    
    private boolean isRecorrente() {
        return tipoD.equals("Recorrente");
    }
    
    private boolean isPercentual() {
        return tipoDivisaoD.equals("Percentual");
    }
    
    public void setDepesaParaEditar(String id, boolean recorrente, boolean fixa) {
        Despesa d;
        
        if (recorrente) {
            tipoD = "Recorrente";
            if (fixa) {
                d = splitUM.getDespesaRecorrenteFixa(id);
                tipoEnumD = ((Fixa) d).getTipo().toString();
            }
            else {
                d = splitUM.getDespesaRecorrenteVariavel(id);
                tipoEnumD = ((Variavel) d).getTipo().toString();
            }
            periodicidadeD = ((Recorrente) d).getPeriodicidade().toString();
            ausenciaD = ((Recorrente) d).isAusencia();
        }
        else {
            tipoD = "Extraordinária";
            d = splitUM.getDespesaExtraordinaria(id);
        }
        novaDespesa = false;
        idD = id;
        nomeD = d.getDescricao();
        valorD = d.getValor();
        fixaD = fixa;
        //tipoD = "";
        tipoDivisaoD = d.getDivisoes().get(0) instanceof Percentual ? "Percentual" : "Valor";
        moradoresD = getMapDivisoes(d.getDivisoes());
    }
    
    public void setAdicionarDespesa() {
        idD = null;
        novaDespesa = true;
    }
    
    
    private List<Divisao> getDivisoes() {
        return moradoresD.entrySet().stream().map(e -> {
            if (isPercentual()) {
                return new Percentual(e.getKey(), e.getValue()/100);
            }
            else {
                return new PorValor(e.getKey(), e.getValue());
            }
        }).collect(Collectors.toList());
    }
    
    private Map<String, Float> getMapDivisoes(List<Divisao> divisoes) {
        return divisoes.stream().collect(Collectors
                .toMap(Divisao::getUsername, d -> {
                    if (d instanceof Percentual) {
                        return ((Percentual) d).getPercentagem() * 100;
                    }
                    else {
                        return ((PorValor) d).getValor();
                    }
        }));
    }
}
