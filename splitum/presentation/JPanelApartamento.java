/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package splitum.presentation;

import java.util.List;
import java.util.stream.Collectors;
import javax.swing.table.DefaultTableModel;
import splitum.business.SplitUM;
import splitum.business.apartamento.Apartamento;
import splitum.business.estatisticas.EstadoSaldo;

public class JPanelApartamento extends javax.swing.JPanel {

    private boolean editar;
    private SplitUM splitUM;
    private DefaultTableModel tableModel;
    
    /**
     * Creates new form JPanelApartamento
     */
    public JPanelApartamento(SplitUM f) {
        initComponents();
        
        this.splitUM = f;
        
        
        this.tableModel = new DefaultTableModel() {
                @Override
                public boolean isCellEditable(int row, int column) { return false; }
            };
        
        String[] coluna = {"Nome", "Saldo", "Dívidas"};
        tableModel.setColumnIdentifiers(coluna);
        this.jTableMoradores.setModel(tableModel);
        this.jTableMoradores.setRowHeight(25);
    }
    
    protected void init() {
        editar = false;
        jTextFieldCodPostal.setVisible(false);
        jTextFieldMorada.setVisible(false);
        
        Apartamento apartamento = splitUM.getApartamento();
        
        tableModel.setRowCount(0);
        
        for(String[] row : converteEstadoSaldoEmTabela()) {
            tableModel.addRow(row);
        }
        
        jLabelSaldoTotal.setText("Saldo Apartamento: " + splitUM.getBalancoGlobal() + " € ");
        
        if(apartamento.getCodPostal().equals(""))
            jLabelCodigoPostal2.setText("Não definido.");
        else 
            jLabelCodigoPostal2.setText(apartamento.getCodPostal());
        
        if(apartamento.getMorada().equals(""))
            jLabelMorada2.setText("Não definido.");
        else
            jLabelMorada2.setText(apartamento.getMorada());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabelMorada = new javax.swing.JLabel();
        jLabelMorada2 = new javax.swing.JLabel();
        jLabelCodigoPostal = new javax.swing.JLabel();
        jLabelCodigoPostal2 = new javax.swing.JLabel();
        jButtonApartamentoEditar = new javax.swing.JButton();
        jTextFieldMorada = new javax.swing.JTextField();
        jTextFieldCodPostal = new javax.swing.JTextField();
        jLabelMoradores = new javax.swing.JLabel();
        jScrollPaneMoradores = new javax.swing.JScrollPane();
        jTableMoradores = new javax.swing.JTable();
        jLabelSaldoTotal = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new java.awt.GridBagLayout());

        jLabelMorada.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        jLabelMorada.setText("Morada");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 30;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(30, 30, 10, 10);
        add(jLabelMorada, gridBagConstraints);

        jLabelMorada2.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jLabelMorada2.setText("Rua ..");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 30;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 30, 10, 10);
        add(jLabelMorada2, gridBagConstraints);

        jLabelCodigoPostal.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        jLabelCodigoPostal.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabelCodigoPostal.setText("Código Postal");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 30;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(30, 10, 10, 30);
        add(jLabelCodigoPostal, gridBagConstraints);

        jLabelCodigoPostal2.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jLabelCodigoPostal2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabelCodigoPostal2.setText("47...");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 30;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 30);
        add(jLabelCodigoPostal2, gridBagConstraints);

        jButtonApartamentoEditar.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jButtonApartamentoEditar.setText("Editar Morada");
        jButtonApartamentoEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonApartamentoEditarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        add(jButtonApartamentoEditar, gridBagConstraints);

        jTextFieldMorada.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jTextFieldMorada.setMinimumSize(new java.awt.Dimension(150, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 30;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        add(jTextFieldMorada, gridBagConstraints);

        jTextFieldCodPostal.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jTextFieldCodPostal.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jTextFieldCodPostal.setMinimumSize(new java.awt.Dimension(150, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 30;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        add(jTextFieldCodPostal, gridBagConstraints);

        jLabelMoradores.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        jLabelMoradores.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelMoradores.setText("Moradores");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(40, 20, 0, 20);
        add(jLabelMoradores, gridBagConstraints);

        jScrollPaneMoradores.setMinimumSize(new java.awt.Dimension(200, 200));
        jScrollPaneMoradores.setPreferredSize(new java.awt.Dimension(300, 200));

        jTableMoradores.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jTableMoradores.setMinimumSize(new java.awt.Dimension(200, 200));
        jTableMoradores.setPreferredSize(new java.awt.Dimension(300, 200));
        jScrollPaneMoradores.setViewportView(jTableMoradores);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 30, 10, 30);
        add(jScrollPaneMoradores, gridBagConstraints);

        jLabelSaldoTotal.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        jLabelSaldoTotal.setText("Saldo:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 30, 30);
        add(jLabelSaldoTotal, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonApartamentoEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonApartamentoEditarActionPerformed
        
        if (editar == false) {
            jTextFieldMorada.setText(jLabelMorada2.getText());
            jTextFieldCodPostal.setText(jLabelCodigoPostal2.getText());
            jTextFieldCodPostal.setVisible(true);
            jTextFieldMorada.setVisible(true);
            jLabelCodigoPostal2.setVisible(false);
            jLabelMorada2.setVisible(false);
            jButtonApartamentoEditar.setText("Confirmar");
        } 
        else {
            String novaMorada = jTextFieldMorada.getText();
            String novoCodPostal = jTextFieldCodPostal.getText();
            
            splitUM.atualizaDadosApartamento(novaMorada, novoCodPostal);
            jLabelMorada2.setText(novaMorada);
            jLabelCodigoPostal2.setText(novoCodPostal);
            jTextFieldCodPostal.setVisible(false);
            jTextFieldMorada.setVisible(false);
            jLabelCodigoPostal2.setVisible(true);
            jLabelMorada2.setVisible(true);
            jButtonApartamentoEditar.setText("Editar");
        }
        editar = !editar;
    }//GEN-LAST:event_jButtonApartamentoEditarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonApartamentoEditar;
    private javax.swing.JLabel jLabelCodigoPostal;
    private javax.swing.JLabel jLabelCodigoPostal2;
    private javax.swing.JLabel jLabelMorada;
    private javax.swing.JLabel jLabelMorada2;
    private javax.swing.JLabel jLabelMoradores;
    private javax.swing.JLabel jLabelSaldoTotal;
    private javax.swing.JScrollPane jScrollPaneMoradores;
    private javax.swing.JTable jTableMoradores;
    private javax.swing.JTextField jTextFieldCodPostal;
    private javax.swing.JTextField jTextFieldMorada;
    // End of variables declaration//GEN-END:variables

    private List<String[]> converteEstadoSaldoEmTabela() {
        EstadoSaldo estado = splitUM.getEstadoSaldoMoradores();
        
        List<String[]> linhas = estado.getValores().entrySet().stream().map(e -> {
            String[] linha = new String[3];
            linha[0] = e.getKey();
            
            float valor = e.getValue();
            
            if (valor > 0) {
                linha[1] = "+" + valor + " €";
                linha[2] = "--";
            }
            else if (valor == 0) {
                linha[1] = valor + " €";
                linha[2] = "--";
            }
            else {
                linha[1] = valor + " €";
                List<String> listaMoradoresDividas = estado.getEstados().get(e.getKey()).stream().map(v -> v.getMorador() + " (" + v.getValor() + "€)").collect(Collectors.toList());
                linha[2] = listaMoradoresDividas.isEmpty() ? "--" : String.join(", ", listaMoradoresDividas);
            }
            
            return linha;
        }).collect(Collectors.toList());
        
        return linhas;
    }
}
